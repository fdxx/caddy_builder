name: Build

on:
  schedule:
    - cron: '0 3 2 * *'
  workflow_dispatch:

jobs:
  build_caddy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          path: main
          ref: main

      - name: Checkout bin branch
        uses: actions/checkout@v4
        with:
          path: bin
          ref: bin
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest Caddy stable version
        run: |
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/caddyserver/caddy/releases/latest" | jq -r .tag_name)
          CURRENT_VERSION=""
          if [ -f bin/caddy_version ]; then
            CURRENT_VERSION=$(cat bin/caddy_version)
          fi

          if [ "$LATEST_VERSION" = "$CURRENT_VERSION" ]; then
            echo "Caddy is already up to date ($LATEST_VERSION)."
            echo "SHOULD_BUILD=false" >> "$GITHUB_ENV"
          else
            echo "CADDY_VERSION=$LATEST_VERSION" >> "$GITHUB_ENV"
            echo "SHOULD_BUILD=true" >> "$GITHUB_ENV"
          fi

      - name: Install golang
        if: ${{ env.SHOULD_BUILD == 'true' }}
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Install xcaddy
        if: ${{ env.SHOULD_BUILD == 'true' }}
        run: |
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Build Caddy
        if: ${{ env.SHOULD_BUILD == 'true' }}
        run: |
          MODULE_LIST=""
          if [ -f main/module_list ]; then
            MODULE_LIST=$(cat main/module_list | sed 's/^/--with /' | tr '\n' ' ' | sed 's/ $//')
          fi

          xcaddy build "$CADDY_VERSION" $MODULE_LIST
          
          if [ -f caddy ]; then
            cd bin
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            rm -rf ./*
            git add .

            cp ../caddy .
            echo "$CADDY_VERSION" > caddy_version
            git add .

            git commit -m "build $CADDY_VERSION"
            git push origin bin
            
          else
            echo "Error: Caddy binary not found after build."
            exit 1
          fi
