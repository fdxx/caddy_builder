name: build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 2 * *'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check update
        run: |
          LATEST_VERSION=$(curl -s "https://api.github.com/repos/caddyserver/caddy/releases/latest" | jq -r .tag_name)
          CURRENT_VERSION=$(curl -s "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest" | jq -r .tag_name)

          if [ "$LATEST_VERSION" = "$CURRENT_VERSION" ]; then
            echo "Caddy is already up to date ($LATEST_VERSION)."
            echo "SHOULD_BUILD=false" >> "$GITHUB_ENV"
          else
            echo "CADDY_VERSION=$LATEST_VERSION" >> "$GITHUB_ENV"
            echo "SHOULD_BUILD=true" >> "$GITHUB_ENV"
          fi

      - name: Install golang
        if: ${{ env.SHOULD_BUILD == 'true' }}
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Build Caddy
        if: ${{ env.SHOULD_BUILD == 'true' }}
        run: |
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

          MODULE_LIST=""
          if [ -f module_list ]; then
            MODULE_LIST=$(cat module_list | sed 's/^/--with /' | tr '\n' ' ' | sed 's/ $//')
          fi

          xcaddy build "$CADDY_VERSION" $MODULE_LIST

          if [ ! -f caddy ]; then
            echo "Error: Caddy binary not found after build."
            exit 1
          fi

          CADDY_FILE="caddy_${CADDY_VERSION#v}_linux_amd64.tar.gz"
          tar -czvf "$CADDY_FILE" caddy
          echo "CADDY_FILE=$CADDY_FILE" >> "$GITHUB_ENV"

      - name: Release
        if: ${{ env.SHOULD_BUILD == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.CADDY_VERSION }}
          files: ${{ env.CADDY_FILE }}
          